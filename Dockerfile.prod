# 使用多阶段构建，首先构建前端静态文件
FROM node:18-alpine as build-stage

WORKDIR /app

# 拷贝并安装依赖
COPY package*.json ./
RUN npm install

# 拷贝其余文件并构建前端项目
COPY . .
RUN npm run generate

# 等待 3 秒
RUN sleep 3
# 调试：列出生成的文件并保存到日志文件
RUN ls -la /app > /app_contents.log
RUN ls -la /app/dist > /dist_contents.log

# 设置基础镜像为 Nginx
FROM nginx:alpine

# 拷贝构建日志文件
COPY --from=build-stage /app_contents.log /app_contents.log
COPY --from=build-stage /dist_contents.log /dist_contents.log

# 拷贝前端构建结果到 Nginx 服务目录
COPY --from=build-stage /app/dist /usr/share/nginx/html

# 拷贝自定义 Nginx 配置文件
COPY nginx.conf /etc/nginx/nginx.conf

# 暴露 Nginx 使用的端口
EXPOSE 80

# 启动 Nginx 和 JSON Server
CMD ["nginx", "-g", "daemon off;"]
